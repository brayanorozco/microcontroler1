{"version":3,"sources":["../../src/controllers/index.js"],"names":["Update","pk","name","description","price","Model","update","where","uuid","logging","console","error","step","statusCode","message","Delete","destroy","data","Create","create","fields","rows","count","pageCount","Math","ceil","limit","itemCount","View","offset","filter","findAndCountAll"],"mappings":"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","sourcesContent":["import {\n    Model\n} from '../models'\n\nexport const Update = async ({ pk, name, description, price }) => {\n    try {\n\n        await Model.update(\n            { name, description, price },\n            { where: { uuid: pk }, logging: false }\n        )\n\n    } catch (error) {\n        console.error({ step: \"controller Update\", error })\n\n        return {\n            statusCode: 500,\n            message: \"Internal error server\"\n        }\n    }\n}\n\n\nexport const Delete = async ({ pk }) => {\n    try {\n\n      await Model.destroy({ where: {uuid: pk} })\n\n      return {\n        statusCode: 200,\n        data: \"Product deleted\"\n    }\n        \n    } catch (error) {\n        console.error({step: \"controller Delete\"});\n\n        return {\n            statusCode: 500,\n            message: \"Internal error server\"\n        };\n        \n    }\n\n} \n\nexport const Create = async ({\n    name,description, price\n}) => {\n\n    try {\n\n        let { rows, count } = await Model.create(\n        \n            { name, description, price }, \n            { fields: ['name', 'description', 'price'], logging: false }\n        );\n\n        return {\n            statusCode: 200,\n            data: {\n                data: rows,\n                pageCount: Math.ceil(count / limit),\n                itemCount: count\n            }\n        }\n\n    } catch (error) {\n        console.error({step: \"controller Create\"});\n\n        return {\n            statusCode: 500,\n            message: \"Internal error server\"\n        };\n    }\n\n}\n\n\nexport const View = async ({\n    limit,\n    offset,\n    filter\n}) => {\n\n    try {\n\n        let {\n            rows,\n            count\n        } = await Model.findAndCountAll({\n            where: filter,\n            limit,\n            offset,\n            logging: false\n        });\n\n        return {\n            statusCode: 200,\n            data: {\n                data: rows,\n                pageCount: Math.ceil(count / limit),\n                itemCount: count\n            }\n        }\n\n    } catch (error) {\n        console.error({step: \"controller View\"});\n\n        return {\n            statusCode: 500,\n            message: \"Internal error server\"\n        };\n    }\n\n}"],"file":"index.js"}