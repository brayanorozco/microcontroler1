{"version":3,"sources":["../../src/models/index.js"],"names":["opts","timestamps","freezeTableName","Model","sequelize","define","uuid","type","DataTypes","UUID","primaryKey","unique","defaultValue","UUDV4","name","STRING","description","price","BIGINT","status","BOOLEAN","registeredUser","updateUser","syncDB","sync","logging","force","console","info"],"mappings":";;;;;;;AAAA;;AACA;;;;;;AAEA,IAAMA,IAAI,GAAG;AAAEC,EAAAA,UAAU,EAAE,IAAd;AAAoBC,EAAAA,eAAe,EAAE;AAArC,CAAb;;AAEO,IAAMC,KAAK,GAAGC,oBAAUC,MAAV,CAAiB,OAAjB,EAA0B;AAC3CC,EAAAA,IAAI,EAAE;AACFC,IAAAA,IAAI,EAAEC,qBAAUC,IADd;AAEFC,IAAAA,UAAU,EAAE,IAFV;AAGFC,IAAAA,MAAM,EAAE,IAHN;AAIFC,IAAAA,YAAY,EAAEJ,qBAAUK;AAJtB,GADqC;AAQ3CC,EAAAA,IAAI,EAAE;AACFP,IAAAA,IAAI,EAAEC,qBAAUO;AADd,GARqC;AAY3CC,EAAAA,WAAW,EAAE;AACTT,IAAAA,IAAI,EAAEC,qBAAUO;AADP,GAZ8B;AAgB3CE,EAAAA,KAAK,EAAE;AACHV,IAAAA,IAAI,EAAEC,qBAAUU,MADb;AAEHN,IAAAA,YAAY,EAAE;AAFX,GAhBoC;AAqB3CO,EAAAA,MAAM,EAAE;AACJZ,IAAAA,IAAI,EAAEC,qBAAUY,OADZ;AAEJR,IAAAA,YAAY,EAAE;AAFV,GArBmC;AA0B3CS,EAAAA,cAAc,EAAE;AACZd,IAAAA,IAAI,EAAEC,qBAAUC;AADJ,GA1B2B;AA8B3Ca,EAAAA,UAAU,EAAE;AACRf,IAAAA,IAAI,EAAEC,qBAAUC;AADR;AA9B+B,CAA1B,EAiClBT,IAjCkB,CAAd,C,CAmCP;;;;;AAEO,IAAMuB,MAAM;AAAA,qEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIRpB,KAAK,CAACqB,IAAN,CAAW;AACbC,cAAAA,OAAO,EAAE,KADI;AAEbC,cAAAA,KAAK,EAAE;AAFM,aAAX,CAJQ;;AAAA;AAQdC,YAAAA,OAAO,CAACC,IAAR,CAAa,UAAb;AARc;AAAA;;AAAA;AAAA;AAAA;AAWdD,YAAAA,OAAO,CAACC,IAAR,CAAa,YAAb;;AAXc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAANL,MAAM;AAAA;AAAA;AAAA,GAAZ","sourcesContent":["import { DataTypes } from 'sequelize';\nimport { sequelize } from '../settings';\n\nconst opts = { timestamps: true, freezeTableName: true };\n\nexport const Model = sequelize.define('model', {\n    uuid: {\n        type: DataTypes.UUID,\n        primaryKey: true,\n        unique: true,\n        defaultValue: DataTypes.UUDV4\n    },\n\n    name: {\n        type: DataTypes.STRING\n    },\n\n    description: {\n        type: DataTypes.STRING\n    },\n\n    price: {\n        type: DataTypes.BIGINT,\n        defaultValue: 0\n    },\n\n    status: {\n        type: DataTypes.BOOLEAN,\n        defaultValue: true\n    },\n\n    registeredUser: {\n        type: DataTypes.UUID\n    },\n\n    updateUser: {\n        type: DataTypes.UUID\n    },\n}, opts)\n\n//This function is going to help us to setup the previous model in the database\n\nexport const syncDB = async () => {\n\n    try {\n\n        await Model.sync({\n            logging: false,\n            force: true\n        })\n        console.info('Model up')\n\n    } catch (error) {\n        console.info('Model down', error);\n    }\n\n}"],"file":"index.js"}