{"version":3,"sources":["../../src/adapters/processor.js"],"names":["queueUpdate","process","job","done","data","pk","name","description","price","statusCode","message","console","error","step","Error","queueCreate","queueFindEnable","limit","offset","queueView","filter","queueDelete"],"mappings":"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","sourcesContent":["import { handleView, HandleCreate, HandleUpdate, FindEnable, HandleDelete } from '../services';\nimport { queueView, queueFindEnable, queueCreate, queueUpdate, queueDelete } from './index';\n\n\nqueueUpdate.process(async (job, done) => {\n\n    try {\n\n        let { pk, name, description, price  } = job.data\n\n        let { statusCode, data, message } = await HandleUpdate({ pk, name, description, price })\n\n        return done(null, { statusCode, data, message })\n\n    } catch (error) {\n        console.error({\n            step: \"adapter queueUpdate\",\n            error\n        });\n\n        return done(new Error({\n            statusCode: 500,\n            message: \"Internal error server\"\n        }))\n\n    }\n\n});\n\nqueueCreate.process(async (job, done) => {\n\n    try {\n\n        let { name, description, price } = job.data\n\n        let { statusCode, data, message } = await HandleCreate({ name, description, price });\n\n        return done(null, { statusCode, data, message })\n\n    } catch (error) {\n        console.error({\n            step: \"adapter queueCreate\",\n            error\n        });\n\n        return done(new Error({\n            statusCode: 500,\n            message: \"Internal error server\"\n        }))\n\n    }\n\n});\n\nqueueFindEnable.process(async (job, done) => {\n\n    try {\n\n        let { limit, offset } = job.data\n\n        let { statusCode, data, message } = await FindEnable({ limit, offset });\n\n        return done(null, { statusCode, data, message })\n\n    } catch (error) {\n        console.error({\n            step: \"adapter queueFindEnable\",\n            error\n        });\n\n        return done(new Error({\n            statusCode: 500,\n            message: \"Internal error server\"\n        }))\n\n    }\n\n});\n\nqueueView.process(async (job, done) => {\n\n    try {\n\n        let { limit, offset, filter } = job.data\n\n        let { statusCode, data, message } = await handleView({ limit, offset, filter })\n\n        return done(null, { statusCode, data, message })\n\n    } catch (error) {\n        console.error({\n            step: \"adapter queueView\",\n            error\n        });\n\n        return done(new Error({\n            statusCode: 500,\n            message: \"Internal error server\"\n        }))\n\n    }\n\n});\n\nqueueDelete.process(async (job, done) => {\n\n    try {\n\n        let { pk } = job.data\n\n        let { statusCode, data, message } = await HandleDelete({ pk })\n\n        return done(null, { statusCode, data, message })\n\n    } catch (error) {\n        console.error({\n            step: \"adapter queueDelete\",\n            error\n        });\n\n        return done(new Error({\n            statusCode: 500,\n            message: \"Internal error server\"\n        }))\n\n    }\n\n});"],"file":"processor.js"}